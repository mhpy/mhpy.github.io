<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[debug]]></title>
    <url>%2Funcategorized%2Fdebug%2F</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[next]]></title>
    <url>%2Funcategorized%2Fnext%2F</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[next]]></title>
    <url>%2Funcategorized%2Fnext%2F</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[hello-4]]></title>
    <url>%2F455%2F456%2Fhello-4%2F</url>
    <content type="text"></content>
      <categories>
        <category>455</category>
        <category>456</category>
      </categories>
      <tags>
        <tag>121</tag>
        <tag>122</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hello-3]]></title>
    <url>%2F456%2Fhello-3%2F</url>
    <content type="text"></content>
      <categories>
        <category>456</category>
      </categories>
      <tags>
        <tag>123</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[超详细Hexo+Github搭建技术博客教程【持续更新】]]></title>
    <url>%2FHexo%2F%E8%B6%85%E8%AF%A6%E7%BB%86Hexo%2BGithub%E6%90%AD%E5%BB%BA%E6%8A%80%E6%9C%AF%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B%2F</url>
    <content type="text"><![CDATA[前言 菜鸟搭建的一个博客，作为学习使用，请大家不要乱喷哦，谢谢！ 准备环境 准备 node 和 git 环境，首先，安装 NodeJS，因为 Hexo 是基于 Node.js 驱动的一款博客框架，相比起前面提到过的 Jekyll 框架更快更简洁。然后，安装 git，一个分布式版本控制系统，用于项目的版本控制管理，作者是 Linux 之父。如果 Git 还不熟悉可以参考廖雪峰大神的 Git 教程。两个工具不同的平台安装方法有所不一样，可自行了解按步骤安装，这里不详述了。安装成功后打开git bash（Windowns）或者终端（Mac），下方中将统一称为命令行。在命令行中输入相应命令验证是否成功，如果成功会有相应的版本号。 123git versionnode -vnpm -v 安装Hexo如果以上环境准备好了就可以使用 npm 开始安装 Hexo 了。也可查看 Hexo 的详细文档。在命令行输入执行以下命令： 1npm install -g hexo-cli 安装 Hexo 完成后，再执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件 123hexo init myBlogcd myBlognpm install 新建后，指定文件夹的目录如下 12345678.├── _config.yml # 网站的配置信息，您可以在此配置大部分的参数。 ├── package.json├── scaffolds # 模版文件夹├── source # 资源文件夹，除 _posts 文件，其他以下划线_开头的文件或者文件夹不会被编译打包到public文件夹| ├── _drafts # 草稿文件| └── _posts # 文章Markdowm文件 └── themes # 主题文件夹 好了，如果上面的命令都没报错的话，就恭喜完成了，运行 hexo s( 或者 hexo s –debug) 命令，其中 s 是 server 的缩写，在浏览器中输入 http://localhost:4000 回车就可以预览效果了。 1hexo s 以下是我本地的预览效果，更换了 next 主题的，默认不是这个主题。 至此，你本地的博客就已经搭建成功，接下来就是部署到 Github Page 了。 注册 Github如果你还没有 Github 账号就注册一个，具体过程如下点击 Start project 或者下面的 new repository 创建一个新的仓库注意点来了，Github 仅能使用一个同名仓库的代码托管一个静态站点，这个网上很多教程没说到的。然后打开仓库创建一个 index.html 文件，并随意先写点内容，比如 Hello World.这个时候打开 http://你的用户名.github.io 就可以看到你的站点啦！index.html 内容只是暂时的预览效果，后面把 Hexo 的文件部署上去就可以在 http://你的用户名.github.io 看到你自己的博客！ 比如我的就是 http://mhpy.github.io 了。 配置 SSH key要使用 git 工具首先要配置一下SSH key，为部署本地博客到 Github 做准备。 打开命令行输入 cd ~/.ssh 如果没报错或者提示什么的说明就是以前生成过的，直接使用 cat ~/.ssh/id_rsa.pub 命令就是可以查看本机上的 SSH key 了。 1cat ~/.ssh/id_rsa.pub 如果之前没有创建，则执行以下命令全局配置一下本地账户： 12git config --global user.name &quot;用户名&quot;git config --global user.email &quot;邮箱地址&quot; 然后开始生成密钥 SSH key 1ssh-keygen -t rsa -C &apos;上面的邮箱&apos; 按照提示完成三次回车，即可生成 ssh key。通过查看 ~/.ssh/id_rsa.pub 文件内容，获取到你的 SSH key 首次使用还需要确认并添加主机到本机SSH可信列表。若返回 Hi xxx! You’ve successfully authenticated, but GitHub does not provide shell access. 内容，则证明添加成功。 1ssh -T git@github.com 到这还没完，还要登录 Github 上添加刚刚生成的SSH key，按以下步骤添加 创建一个新的 SSH key, 标题随便，key 就填刚才生成那个，确认创建，搞定！！这样在你的 SSH keys 列表里就会看到你刚刚添加的密钥。 部署到 Github本地和Github的工作做得差不了，是时候把它们两个连接起来了。你可以查看官网的部署教程。部署之前还需要修改配置和安装部署插件。第一：打开项目根目录下的 _config.yml 配置文件配置参数： 第二：要安装一个部署插件 hexo-deployer-git。 1npm install hexo-deployer-git --save 最后执行以下命令就可以部署上传啦，以下 g 是 generate 缩写，d 是 deploy 缩写： 1hexo g -d 稍等一会，在浏览器访问网址： https://你的用户名.github.io就会看到你的博客啦！！]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo Github</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2Funcategorized%2Fhello-1%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Download Now Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
